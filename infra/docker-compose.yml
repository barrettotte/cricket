version: '3.8'

services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
    devices:
      - /dev/kmsg:/dev/kmsg

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    networks:
      - cricket
  
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: unless-stopped
    command: 
      - '--config.file=/config/alertmanager.yml'
      - '--cluster.advertise-address=0.0.0.0:9093'
    ports:
      - "9093-9093"
    volumes:
      - ./alertmanager:/config
      - alertmanager_data:/data
    networks:
      - cricket
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on: 
      - prometheus
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    user: "1000"
    networks:
      - cricket

  discord-alerts:
    image: benjojo/alertmanager-discord
    container_name: discord-alerts
    restart: unless-stopped
    environment:
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK_URL}
    networks:
      - cricket

networks:
  cricket:
    driver: bridge

volumes:
  alertmanager_data: {}
  grafana_data: {}
  prometheus_data: {}
